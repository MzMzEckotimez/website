worker_processes 1; # cannot have more because of luapower's global cache
user cosmin cosmin;
#error_log logs/debug.log debug;

events {
	worker_connections 1024;
}

include env.conf;

http {
	include mime.types;

	server {
		listen 80;
		server_name luapower.com;
		access_log off;

		# can't use https for this because ubuntu doesn't have the comodo IC.
		location /files {
			root ../www;
			autoindex on;
		}

		location / {
			return 301 https://luapower.com$request_uri;
		}
	}

	server {
		listen 80;
		server_name mokingburd.de;

		location / {
			root ../../mokingburd.de;
			index index.html;
		}
	}

	server {
		listen 443 ssl;
		server_name luapower.com;
		access_log off;

		# ssl config
		ssl_certificate ssl/luapower.com.crt;
		ssl_certificate_key ssl/luapower.com.key;
		ssl_prefer_server_ciphers on;
		ssl_ciphers 'AES128+EECDH:AES128+EDH:!aNULL';
		# we can't add this because of the ppa above
		# TODO: use luapower.net for the ppa and add this back
		# add_header Strict-Transport-Security "max-age=86400";
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_session_cache shared:SSL:10m;
		ssl_stapling on;
		ssl_stapling_verify on;
		resolver 8.8.4.4 8.8.8.8 valid=300s;
		resolver_timeout 10s;
		ssl_dhparam ssl/dhparam.pem;

		# forum forwarding
		location /forum {
			proxy_pass http://127.0.0.1:4567;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
		}

		# git mirror
		location ~ /git(/.*) {
			client_max_body_size 0;
			# fcgiwrap is set up to listen on this host:port
			fastcgi_pass  unix:/var/run/fcgiwrap.socket;
			fastcgi_param SCRIPT_FILENAME     /usr/lib/git-core/git-http-backend;
			fastcgi_param GIT_HTTP_EXPORT_ALL "";
			fastcgi_param GIT_PROJECT_ROOT    ~/git-mirror;
			fastcgi_param PATH_INFO           $1;
			fastcgi_param REMOTE_USER         $remote_user;
		}

		# compress all text data
		gzip on;
		gzip_min_length 1000;
		gzip_types text/plain;
		gzip_types application/json;
		gzip_types application/javascript;
		gzip_types text/css;

		# serve static files first and fallback to Lua scripts
		location / {
			root ../www;
			try_files $uri @lua;
		}

		# files are also browsable
		location /files {
			root ../www;
			autoindex on;
		}

		# my stuff
		location /capr {
			alias /home/cosmin/capr.github.io;
		}
		location /otr {
			alias /home/cosmin/otr;
			autoindex on;
		}

		# serve all dynamic content through a single Lua entry-point
		location @lua {
			default_type text/html;
			content_by_lua_file '../www/ngx.lua';
		}

		# prevent displaying our urls in frames.
		add_header X-Frame-Options DENY;

		# prevent browsers from sniffing mime types away from content-type.
		add_header X-Content-Type-Options nosniff;
	}
}
